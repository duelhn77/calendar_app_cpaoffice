{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/app/api/fetchLocations/route.ts"],"sourcesContent":["import { google } from \"googleapis\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nconst SHEET_ID = process.env.SHEET_ID || \"\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    if (!SHEET_ID || !process.env.GOOGLE_PROJECT_ID || !process.env.GOOGLE_PRIVATE_KEY || !process.env.GOOGLE_CLIENT_EMAIL) {\r\n      console.error(\"❌ 環境変数が不足しています\");\r\n      return NextResponse.json({ error: \"環境変数が不足しています\" }, { status: 500 });\r\n    }\r\n\r\n    const auth = new google.auth.GoogleAuth({\r\n      credentials: {\r\n        type: \"service_account\",\r\n        project_id: process.env.GOOGLE_PROJECT_ID,\r\n        private_key: process.env.GOOGLE_PRIVATE_KEY.replace(/\\\\n/g, \"\\n\"),\r\n        client_email: process.env.GOOGLE_CLIENT_EMAIL,\r\n      },\r\n      scopes: [\"https://www.googleapis.com/auth/spreadsheets.readonly\"],\r\n    });\r\n\r\n    const sheets = google.sheets({ version: \"v4\", auth });\r\n\r\n    // ✅ 正しいシート名を指定\r\n    const range = \"Locations!A2:A\";  \r\n\r\n    const response = await sheets.spreadsheets.values.get({\r\n      spreadsheetId: SHEET_ID,\r\n      range: range,\r\n    });\r\n\r\n    const rows = response.data.values || [];\r\n\r\n    if (rows.length === 0) {\r\n      console.error(\"❌ Locations データが見つかりません\");\r\n      return NextResponse.json({ error: \"Locations データが見つかりません\" }, { status: 404 });\r\n    }\r\n\r\n    // ✅ Location をオブジェクトの配列として返す\r\n    const locations = rows.map(row => ({\r\n      value: row[0], // A列\r\n      label: row[0], // A列\r\n    }));\r\n\r\n    console.log(\"✅ 取得した作業場所:\", locations);\r\n    return NextResponse.json(locations, { status: 200 });\r\n\r\n  } catch (error) {\r\n    console.error(\"❌ fetchLocations API エラー:\", error);\r\n    return NextResponse.json({ error: (error as Error).message }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ,IAAI;AAElC,eAAe;IACpB,IAAI;QACF,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,CAAC,iBAAiB,IAAI,CAAC,QAAQ,GAAG,CAAC,kBAAkB,IAAI,CAAC,QAAQ,GAAG,CAAC,mBAAmB,EAAE;YACtH,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;gBACX,MAAM;gBACN,YAAY,QAAQ,GAAG,CAAC,iBAAiB;gBACzC,aAAa,QAAQ,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC,QAAQ;gBAC5D,cAAc,QAAQ,GAAG,CAAC,mBAAmB;YAC/C;YACA,QAAQ;gBAAC;aAAwD;QACnE;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,eAAe;QACf,MAAM,QAAQ;QAEd,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACpD,eAAe;YACf,OAAO;QACT;QAEA,MAAM,OAAO,SAAS,IAAI,CAAC,MAAM,IAAI,EAAE;QAEvC,IAAI,KAAK,MAAM,KAAK,GAAG;YACrB,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,6BAA6B;QAC7B,MAAM,YAAY,KAAK,GAAG,CAAC,CAAA,MAAO,CAAC;gBACjC,OAAO,GAAG,CAAC,EAAE;gBACb,OAAO,GAAG,CAAC,EAAE;YACf,CAAC;QAED,QAAQ,GAAG,CAAC,eAAe;QAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,WAAW;YAAE,QAAQ;QAAI;IAEpD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,AAAC,MAAgB,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}