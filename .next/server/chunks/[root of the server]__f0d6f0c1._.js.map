{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/app/api/authenticateUser/route.ts"],"sourcesContent":["import { google } from \"googleapis\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nconst SHEET_ID = process.env.SHEET_ID || \"\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { email, password } = await req.json();\r\n    \r\n    const auth = new google.auth.GoogleAuth({\r\n      credentials: {\r\n        type: \"service_account\",\r\n        project_id: process.env.GOOGLE_PROJECT_ID,\r\n        private_key: process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\r\n        client_email: process.env.GOOGLE_CLIENT_EMAIL,\r\n      },\r\n      scopes: [\"https://www.googleapis.com/auth/spreadsheets.readonly\"],\r\n    });\r\n\r\n    const sheets = google.sheets({ version: \"v4\", auth });\r\n\r\n    // ‚úÖ „Éò„ÉÉ„ÉÄ„ÉºÔºà1Ë°åÁõÆÔºâ„ÇíÂèñÂæó„Åó„Å¶„ÄåUserID„Äç„ÄåEmail„Äç„ÄåPassword„Äç„ÅÆÂàó„ÇíÁâπÂÆö\r\n    const headerRes = await sheets.spreadsheets.values.get({\r\n      spreadsheetId: SHEET_ID,\r\n      range: \"Users!1:1\", // 1Ë°åÁõÆ„ÇíÂèñÂæó\r\n    });\r\n\r\n    const headers = headerRes.data.values?.[0] || []; // 1Ë°åÁõÆ„ÅÆ„Éá„Éº„Çø\r\n    const userIdColIndex = headers.indexOf(\"UserID\"); // UserID „ÅÆ‰ΩçÁΩÆ\r\n    const emailColIndex = headers.indexOf(\"Email\"); // Email „ÅÆ‰ΩçÁΩÆ\r\n    const passwordColIndex = headers.indexOf(\"Password\"); // Password „ÅÆ‰ΩçÁΩÆ\r\n\r\n    if (userIdColIndex === -1 || emailColIndex === -1 || passwordColIndex === -1) {\r\n      throw new Error(\"‚ùå 'UserID', 'Email', 'Password' „ÅÆ„ÅÑ„Åö„Çå„Åã„ÅÆÂàó„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„ÇìÔºÅ\");\r\n    }\r\n\r\n    // ‚úÖ ÂèñÂæó„Åô„ÇãÂàóÁØÑÂõ≤„ÇíÂãïÁöÑ„Å´Ë®≠ÂÆö\r\n    const lastColIndex = Math.max(userIdColIndex, emailColIndex, passwordColIndex); // ‰∏ÄÁï™Âè≥„ÅÆÂàó\r\n    const lastCol = String.fromCharCode(65 + lastColIndex); // A=65, B=66...\r\n\r\n    console.log(`üîπ ÂèñÂæó„Åô„ÇãÁØÑÂõ≤: Users!A:${lastCol}`);\r\n\r\n    // ‚úÖ Users „Ç∑„Éº„Éà„ÅÆÂÖ®„Éá„Éº„Çø„ÇíÂèñÂæóÔºàAÂàó„Åã„ÇâÊúÄÂè≥Âàó„Åæ„ÅßÔºâ\r\n    const response = await sheets.spreadsheets.values.get({\r\n      spreadsheetId: SHEET_ID,\r\n      range: `Users!A:${lastCol}`,\r\n    });\r\n\r\n    const rows = response.data.values || [];\r\n\r\n    // ‚úÖ ÂÖ•Âäõ„Åï„Çå„Åü Email & Password „Å´‰∏ÄËá¥„Åô„Çã„É¶„Éº„Ç∂„Éº„ÇíÊ§úÁ¥¢\r\n    const userRow = rows.find(row => row[emailColIndex] === email && row[passwordColIndex] === password);\r\n\r\n    if (userRow) {\r\n      const userId = userRow[userIdColIndex]; // ‚úÖ „É¶„Éº„Ç∂„ÉºID„ÇíÂèñÂæó\r\n      return NextResponse.json({ userId });\r\n    } else {\r\n      return NextResponse.json({ error: \"Invalid credentials\" }, { status: 401 });\r\n    }\r\n  } catch (error) {\r\n    return NextResponse.json({ error: (error as Error).message }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ,IAAI;AAElC,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAE1C,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;gBACX,MAAM;gBACN,YAAY,QAAQ,GAAG,CAAC,iBAAiB;gBACzC,aAAa,QAAQ,GAAG,CAAC,kBAAkB,EAAE,QAAQ,QAAQ;gBAC7D,cAAc,QAAQ,GAAG,CAAC,mBAAmB;YAC/C;YACA,QAAQ;gBAAC;aAAwD;QACnE;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,iDAAiD;QACjD,MAAM,YAAY,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACrD,eAAe;YACf,OAAO;QACT;QAEA,MAAM,UAAU,UAAU,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,UAAU;QAC5D,MAAM,iBAAiB,QAAQ,OAAO,CAAC,WAAW,aAAa;QAC/D,MAAM,gBAAgB,QAAQ,OAAO,CAAC,UAAU,YAAY;QAC5D,MAAM,mBAAmB,QAAQ,OAAO,CAAC,aAAa,eAAe;QAErE,IAAI,mBAAmB,CAAC,KAAK,kBAAkB,CAAC,KAAK,qBAAqB,CAAC,GAAG;YAC5E,MAAM,IAAI,MAAM;QAClB;QAEA,kBAAkB;QAClB,MAAM,eAAe,KAAK,GAAG,CAAC,gBAAgB,eAAe,mBAAmB,QAAQ;QACxF,MAAM,UAAU,OAAO,YAAY,CAAC,KAAK,eAAe,gBAAgB;QAExE,QAAQ,GAAG,CAAC,CAAC,mBAAmB,EAAE,SAAS;QAE3C,iCAAiC;QACjC,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACpD,eAAe;YACf,OAAO,CAAC,QAAQ,EAAE,SAAS;QAC7B;QAEA,MAAM,OAAO,SAAS,IAAI,CAAC,MAAM,IAAI,EAAE;QAEvC,wCAAwC;QACxC,MAAM,UAAU,KAAK,IAAI,CAAC,CAAA,MAAO,GAAG,CAAC,cAAc,KAAK,SAAS,GAAG,CAAC,iBAAiB,KAAK;QAE3F,IAAI,SAAS;YACX,MAAM,SAAS,OAAO,CAAC,eAAe,EAAE,cAAc;YACtD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE;YAAO;QACpC,OAAO;YACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC3E;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,AAAC,MAAgB,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}