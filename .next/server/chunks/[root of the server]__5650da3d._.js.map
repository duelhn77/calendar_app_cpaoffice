{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/app/api/fetchEngagements/route.ts"],"sourcesContent":["import { google } from 'googleapis';\r\nimport { NextResponse } from 'next/server';\r\n\r\n// Áí∞Â¢ÉÂ§âÊï∞„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ\r\nconst SHEET_ID = process.env.SHEET_ID || '';\r\n\r\nexport const runtime = \"nodejs\"; // ‚úÖ API„É´„Éº„Éà„ÅÆ„É©„É≥„Çø„Ç§„É†„ÇíNode.js„Å´Ë®≠ÂÆö\r\n\r\nexport async function GET(req: Request) {\r\n  try {\r\n    const { searchParams } = new URL(req.url);\r\n    const userId = searchParams.get(\"userId\");\r\n\r\n    if (!userId) {\r\n      console.error(\"‚ùå userId „Åå„É™„ÇØ„Ç®„Çπ„Éà„Å´Âê´„Åæ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì\");\r\n      return NextResponse.json({ error: \"userId „ÅåÂøÖË¶Å„Åß„Åô\" }, { status: 400 });\r\n    }\r\n\r\n    if (!SHEET_ID || !process.env.GOOGLE_PROJECT_ID || !process.env.GOOGLE_PRIVATE_KEY || !process.env.GOOGLE_CLIENT_EMAIL) {\r\n      console.error(\"‚ùå Áí∞Â¢ÉÂ§âÊï∞„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô\");\r\n      return NextResponse.json({ error: \"Áí∞Â¢ÉÂ§âÊï∞„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô\" }, { status: 500 });\r\n    }\r\n\r\n    const auth = new google.auth.GoogleAuth({\r\n      credentials: {\r\n        type: 'service_account',\r\n        project_id: process.env.GOOGLE_PROJECT_ID,\r\n        private_key: process.env.GOOGLE_PRIVATE_KEY.replace(/\\\\n/g, '\\n'),\r\n        client_email: process.env.GOOGLE_CLIENT_EMAIL,\r\n      },\r\n      scopes: ['https://www.googleapis.com/auth/spreadsheets.readonly'],\r\n    });\r\n\r\n    const sheets = google.sheets({ version: 'v4', auth });\r\n\r\n    // ‚úÖ Users „Ç∑„Éº„Éà„ÅÆ„Éò„ÉÉ„ÉÄ„Éº„ÇíÂèñÂæó\r\n    const headersResponse = await sheets.spreadsheets.values.get({\r\n      spreadsheetId: SHEET_ID,\r\n      range: \"Users!A1:Z1\", // üîπ „Éò„ÉÉ„ÉÄ„Éº„ÅÆ„ÅøÂèñÂæó\r\n    });\r\n\r\n    const headers = headersResponse.data.values?.[0] || [];\r\n    const engagementsColumnIndex = headers.indexOf(\"Engagements\"); // üîπ \"Engagements\" „ÅÆÂàó„ÇíÂãïÁöÑ„Å´ÂèñÂæó\r\n\r\n    if (engagementsColumnIndex === -1) {\r\n      console.error(\"‚ùå Users„Ç∑„Éº„Éà„Å´ 'Engagements' Âàó„ÅåÂ≠òÂú®„Åó„Åæ„Åõ„Çì\");\r\n      return NextResponse.json({ error: \"'Engagements' Âàó„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì\" }, { status: 500 });\r\n    }\r\n\r\n    // ‚úÖ Users „Ç∑„Éº„Éà„ÅÆÂÖ®„Éá„Éº„Çø„ÇíÂèñÂæó\r\n    const usersResponse = await sheets.spreadsheets.values.get({\r\n      spreadsheetId: SHEET_ID,\r\n      range: \"Users!A:Z\",\r\n    });\r\n\r\n    const usersData = usersResponse.data.values || [];\r\n    \r\n    // üîπ userId „Å´Ë©≤ÂΩì„Åô„ÇãË°å„ÇíÊ§úÁ¥¢\r\n    const userRow = usersData.find(row => row[0] === userId);\r\n    const userEngagements = userRow ? userRow[engagementsColumnIndex]?.split(\",\") || [] : [];\r\n\r\n    console.log(`‚úÖ „É¶„Éº„Ç∂„Éº ${userId} „ÅÆ„Ç®„É≥„Ç≤„Éº„Ç∏„É°„É≥„Éà:`, userEngagements);\r\n\r\n    // ‚úÖ Engagements „Ç∑„Éº„Éà„ÅÆ„Éá„Éº„Çø„ÇíÂèñÂæó\r\n    const engagementsResponse = await sheets.spreadsheets.values.get({\r\n      spreadsheetId: SHEET_ID,\r\n      range: 'Engagements!A2:B', // AÂàó: EngagementÂêç, BÂàó: Ëâ≤\r\n    });\r\n\r\n    const allEngagements = (engagementsResponse.data.values || []).map(row => ({\r\n      name: row[0],\r\n      color: row[1] || \"#3788d8\",\r\n    }));\r\n\r\n    // ‚úÖ `Users` „Ç∑„Éº„Éà„ÅÆÊÉÖÂ†±„Å® `Engagements` „ÅÆ„É™„Çπ„Éà„ÇíÁÖßÂêà\r\n    const filteredEngagements = allEngagements.filter(eng => userEngagements.includes(eng.name));\r\n\r\n    return NextResponse.json(filteredEngagements, { status: 200 });\r\n\r\n  } catch (error) {\r\n    console.error(\"‚ùå fetchEngagements API „Ç®„É©„Éº:\", error);\r\n    return NextResponse.json({ error: (error as Error).message }, { status: 500 });\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}