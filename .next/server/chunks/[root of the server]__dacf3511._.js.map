{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/app/api/getEvents/route.ts"],"sourcesContent":["import { google } from \"googleapis\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nconst SHEET_ID = process.env.SHEET_ID || \"\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    const auth = new google.auth.GoogleAuth({\r\n      credentials: {\r\n        type: \"service_account\",\r\n        project_id: process.env.GOOGLE_PROJECT_ID,\r\n        private_key: process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\r\n        client_email: process.env.GOOGLE_CLIENT_EMAIL,\r\n      },\r\n      scopes: [\"https://www.googleapis.com/auth/spreadsheets.readonly\"],\r\n    });\r\n\r\n    const sheets = google.sheets({ version: \"v4\", auth });\r\n    const response = await sheets.spreadsheets.values.get({\r\n      spreadsheetId: SHEET_ID,\r\n      range: \"TimeSheet!A:J\", // ✅ A列 (DataId) から I列 (Details) まで取得\r\n    });\r\n\r\n    const rows = response.data.values || [];\r\n\r\n    // ヘッダーを除外し、適切なオブジェクトに変換\r\n    const formattedData = rows.slice(1).map((row) => ({\r\n      id: row[0],        // DataId\r\n      userId: row[2],    // UserID\r\n      userName: row[3],  // UserName\r\n      start: row[4],     // Start\r\n      end: row[5],       // End\r\n      engagement: row[6],// Engagement\r\n      activity: row[7],  // Activity\r\n      location: row[8],  // Location\r\n      details: row[9],   // Details\r\n    }));\r\n\r\n    return NextResponse.json(formattedData);\r\n  } catch (error) {\r\n    console.error(\"❌ Google Sheets API エラー:\", error);\r\n    return NextResponse.json({ error: (error as Error).message }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ,IAAI;AAElC,eAAe;IACpB,IAAI;QACF,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;gBACX,MAAM;gBACN,YAAY,QAAQ,GAAG,CAAC,iBAAiB;gBACzC,aAAa,QAAQ,GAAG,CAAC,kBAAkB,EAAE,QAAQ,QAAQ;gBAC7D,cAAc,QAAQ,GAAG,CAAC,mBAAmB;YAC/C;YACA,QAAQ;gBAAC;aAAwD;QACnE;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QACnD,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACpD,eAAe;YACf,OAAO;QACT;QAEA,MAAM,OAAO,SAAS,IAAI,CAAC,MAAM,IAAI,EAAE;QAEvC,wBAAwB;QACxB,MAAM,gBAAgB,KAAK,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAQ,CAAC;gBAChD,IAAI,GAAG,CAAC,EAAE;gBACV,QAAQ,GAAG,CAAC,EAAE;gBACd,UAAU,GAAG,CAAC,EAAE;gBAChB,OAAO,GAAG,CAAC,EAAE;gBACb,KAAK,GAAG,CAAC,EAAE;gBACX,YAAY,GAAG,CAAC,EAAE;gBAClB,UAAU,GAAG,CAAC,EAAE;gBAChB,UAAU,GAAG,CAAC,EAAE;gBAChB,SAAS,GAAG,CAAC,EAAE;YACjB,CAAC;QAED,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,AAAC,MAAgB,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}