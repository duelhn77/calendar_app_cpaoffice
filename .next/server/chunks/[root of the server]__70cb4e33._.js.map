{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/app/api/fetchActivities/route.ts"],"sourcesContent":["import { google } from \"googleapis\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\n// Áí∞Â¢ÉÂ§âÊï∞„ÇíÂèñÂæó\r\nconst SHEET_ID = process.env.SHEET_ID || \"\";\r\n\r\nexport const runtime = \"nodejs\"; // ‚úÖ API „É´„Éº„Éà„ÅÆ„É©„É≥„Çø„Ç§„É†„Çí Node.js „Å´Ë®≠ÂÆö\r\n\r\nexport async function GET() {\r\n  try {\r\n    // üîπ Ë™çË®ºÊÉÖÂ†±„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ\r\n    if (!SHEET_ID || !process.env.GOOGLE_PROJECT_ID || !process.env.GOOGLE_PRIVATE_KEY || !process.env.GOOGLE_CLIENT_EMAIL) {\r\n      console.error(\"‚ùå Áí∞Â¢ÉÂ§âÊï∞„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô\");\r\n      return NextResponse.json({ error: \"Áí∞Â¢ÉÂ§âÊï∞„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Åæ„Åô\" }, { status: 500 });\r\n    }\r\n\r\n    const auth = new google.auth.GoogleAuth({\r\n      credentials: {\r\n        type: \"service_account\",\r\n        project_id: process.env.GOOGLE_PROJECT_ID,\r\n        private_key: process.env.GOOGLE_PRIVATE_KEY.replace(/\\\\n/g, \"\\n\"),\r\n        client_email: process.env.GOOGLE_CLIENT_EMAIL,\r\n      },\r\n      scopes: [\"https://www.googleapis.com/auth/spreadsheets.readonly\"],\r\n    });\r\n\r\n    const sheets = google.sheets({ version: \"v4\", auth });\r\n\r\n    const range = \"Activities!A:C\"; // AÂàó (Engagement) - CÂàó (Activity)\r\n\r\n    const response = await sheets.spreadsheets.values.get({\r\n      spreadsheetId: SHEET_ID,\r\n      range: range,\r\n    });\r\n\r\n    const rows = response.data.values || [];\r\n\r\n    if (rows.length < 2) {\r\n      console.error(\"‚ùå Activities „Éá„Éº„Çø„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì\");\r\n      return NextResponse.json({ error: \"Activities „Éá„Éº„Çø„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì\" }, { status: 404 });\r\n    }\r\n\r\n    const activities = rows.slice(1).map(row => ({\r\n      engagement: row[0] || \"\", // AÂàó\r\n      activity_id: row[1] || \"\", // BÂàó (ID)\r\n      activity: row[2] || \"\", // CÂàó (Activity Âêç)\r\n    }));\r\n\r\n    console.log(\"‚úÖ ÂèñÂæó„Åó„Åü„Ç¢„ÇØ„ÉÜ„Ç£„Éì„ÉÜ„Ç£:\", activities);\r\n\r\n    return NextResponse.json(activities, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"‚ùå fetchActivities API „Ç®„É©„Éº:\", error);\r\n    return NextResponse.json({ error: (error as Error).message }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,UAAU;AACV,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ,IAAI;AAElC,MAAM,UAAU,UAAU,+BAA+B;AAEzD,eAAe;IACpB,IAAI;QACF,eAAe;QACf,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,CAAC,iBAAiB,IAAI,CAAC,QAAQ,GAAG,CAAC,kBAAkB,IAAI,CAAC,QAAQ,GAAG,CAAC,mBAAmB,EAAE;YACtH,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;gBACX,MAAM;gBACN,YAAY,QAAQ,GAAG,CAAC,iBAAiB;gBACzC,aAAa,QAAQ,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC,QAAQ;gBAC5D,cAAc,QAAQ,GAAG,CAAC,mBAAmB;YAC/C;YACA,QAAQ;gBAAC;aAAwD;QACnE;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,MAAM,QAAQ,kBAAkB,kCAAkC;QAElE,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACpD,eAAe;YACf,OAAO;QACT;QAEA,MAAM,OAAO,SAAS,IAAI,CAAC,MAAM,IAAI,EAAE;QAEvC,IAAI,KAAK,MAAM,GAAG,GAAG;YACnB,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAyB,GAAG;gBAAE,QAAQ;YAAI;QAC9E;QAEA,MAAM,aAAa,KAAK,KAAK,CAAC,GAAG,GAAG,CAAC,CAAA,MAAO,CAAC;gBAC3C,YAAY,GAAG,CAAC,EAAE,IAAI;gBACtB,aAAa,GAAG,CAAC,EAAE,IAAI;gBACvB,UAAU,GAAG,CAAC,EAAE,IAAI;YACtB,CAAC;QAED,QAAQ,GAAG,CAAC,kBAAkB;QAE9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,YAAY;YAAE,QAAQ;QAAI;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,AAAC,MAAgB,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}