{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/components/Modal.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { EventData } from \"@/types/EventData\"; // ✅ `EventData` を正しくインポート\r\nimport Select from \"react-select\";\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (data: EventData) => Promise<void>;\r\n  onUpdate: (data: EventData, range: { start: Date; end: Date } | null) => Promise<void>;\r\n  onDelete: (id: string) => Promise<void>; // ✅ 削除用の関数を追加\r\n  selectedRange?: { start: Date; end: Date } | null;\r\n  selectedEvent?: EventData | null;\r\n}\r\n\r\ninterface Engagement {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport function Modal({ isOpen, onClose, onSubmit, onUpdate, onDelete, selectedRange, selectedEvent }: ModalProps) {\r\n  const [engagement, setEngagement] = useState<{ value: string; label: string } | null>(null);\r\n  const [engagements, setEngagements] = useState<Engagement[]>([]);\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [activities, setActivities] = useState<{ engagement: string; activity_id: string; activity: string }[]>([]);\r\n  const [filteredActivities, setFilteredActivities] = useState<{ activity_id: string; activity: string }[]>([]);\r\n  const [location, setLocation] = useState<{ value: string; label: string } | null>(null);\r\n  const [locations, setLocations] = useState<{ value: string; label: string }[]>([]);\r\n  const [details, setDetails] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false); \r\n  const [isDuplicating, setIsDuplicating] = useState(false);\r\n\r\n  const handleAction = async () => {\r\n    console.log(\"✅ 追加・更新ボタンが押されました！\");\r\n    setIsSubmitting(true); // 🔸送信開始時にロック\r\n\r\n    try {\r\n      if (selectedEvent) {\r\n        if (!selectedRange) {\r\n          console.error(\"❌ 更新範囲が未定義です！\");\r\n          return;\r\n        }\r\n\r\n        await onUpdate({\r\n          id: selectedEvent.id || \"\",\r\n          userId: localStorage.getItem(\"userId\") || \"\",\r\n          engagement: engagement?.value ?? \"\",\r\n          activity,\r\n          location: location?.value || \"\",\r\n          details,\r\n          start: selectedRange.start.toISOString(),\r\n          end: selectedRange.end.toISOString(),\r\n        }, selectedRange);\r\n      } else {\r\n        await onSubmit({\r\n          id: \"\",\r\n          userId: localStorage.getItem(\"userId\") || \"\",\r\n          engagement: engagement?.value ?? \"\",\r\n          activity,\r\n          location: location?.value || \"\",\r\n          details,\r\n          start: selectedRange?.start.toISOString() || \"\",\r\n          end: selectedRange?.end.toISOString() || \"\",\r\n        });\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false); // 🔸送信後に解除\r\n    }\r\n  };\r\n\r\n\r\n  // ✅ エンゲージメントリストの取得\r\n  useEffect(() => {\r\n    const fetchEngagements = async () => {\r\n      try {\r\n        const userId = typeof window !== \"undefined\" ? localStorage.getItem(\"userId\") : null;\r\n        if (!userId) {\r\n          console.error(\"❌ ユーザーIDが取得できません！\");\r\n          return;\r\n        }\r\n  \r\n        const response = await fetch(`/api/fetchEngagements?userId=${encodeURIComponent(userId)}`);\r\n        if (!response.ok) throw new Error(\"エンゲージメントの取得に失敗しました\");\r\n  \r\n        const data = await response.json();\r\n        if (!Array.isArray(data)) {\r\n          console.error(\"❌ APIのレスポンスが配列ではありません:\", data);\r\n          return;\r\n        }\r\n  \r\n        const formattedEngagements = data.map((eng: { id?: string; name: string }, index: number) => ({\r\n          id: eng.id || index.toString(),\r\n          name: eng.name,\r\n        }));\r\n  \r\n        setEngagements(formattedEngagements);\r\n      } catch (error) {\r\n        console.error(\"❌ エンゲージメントの取得エラー:\", error);\r\n      }\r\n    };\r\n  \r\n    if (isOpen) {\r\n      fetchEngagements();\r\n    }\r\n  }, [isOpen]);\r\n  \r\n\r\n\r\n// ✅ Activities を取得\r\nuseEffect(() => {\r\n  const fetchActivities = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/fetchActivities\");\r\n      const data = await response.json();\r\n      console.log(\"✅ Activity データ:\", data);\r\n      setActivities(data);\r\n    } catch (error) {\r\n      console.error(\"❌ Activity の取得エラー:\", error);\r\n    }\r\n  };\r\n\r\n  if (isOpen) {\r\n    fetchActivities();\r\n  }\r\n}, [isOpen]);\r\n\r\n// ✅ Engagement に応じた Activity をフィルタリング\r\nuseEffect(() => {\r\n  const filtered = activities.filter(act => act.engagement === engagement?.value);\r\n\r\n  setFilteredActivities(filtered);\r\n}, [engagement, activities]);\r\n  \r\n\r\n  // ✅ `selectedEvent` のデータをセット\r\n  useEffect(() => {\r\n    if (selectedEvent) {\r\n      console.log(\"📌 選択されたイベント:\", selectedEvent);\r\n      setEngagement(selectedEvent.engagement ? { value: selectedEvent.engagement, label: selectedEvent.engagement } : null);\r\n      setActivity(selectedEvent.activity || \"\");\r\n      setLocation(selectedEvent.location ? { value: selectedEvent.location, label: selectedEvent.location } : null);\r\n      setDetails(selectedEvent.details || \"\");\r\n    } else {\r\n      // 新規作成時のデフォルト値\r\n      setEngagement(null);\r\n      setActivity(\"\");\r\n      setLocation(null);\r\n      setDetails(\"\");\r\n    }\r\n  }, [selectedEvent, engagements]);\r\n\r\n  // 🔹 作業場所リストの取得\r\n  useEffect(() => {\r\n    const fetchLocations = async () => {\r\n      try {\r\n        const response = await fetch(\"/api/fetchLocations\");\r\n        const data = await response.json();\r\n        console.log(\"✅ 取得した作業場所:\", data);\r\n        setLocations(data);\r\n      } catch (error) {\r\n        console.error(\"❌ 作業場所の取得エラー:\", error);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchLocations();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h1>作業情報を入力</h1>\r\n        {selectedRange && (\r\n         <p>\r\n          📅 {new Date(selectedRange.start.getTime() - 9 * 60 * 60 * 1000).toLocaleTimeString(\"ja-JP\", { hour: \"2-digit\", minute: \"2-digit\" })} \r\n           ～ {new Date(selectedRange.end.getTime() - 9 * 60 * 60 * 1000).toLocaleTimeString(\"ja-JP\", { hour: \"2-digit\", minute: \"2-digit\" })}\r\n         </p>\r\n        )}\r\n\r\n\r\n         {/* エンゲージメント選択 */}\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <label>エンゲージメント</label><br />\r\n          <Select\r\n            options={engagements.map(eng => ({\r\n            value: eng.name,\r\n            label: eng.name\r\n            }))}\r\n            value={engagement}\r\n            onChange={(selectedOption) => setEngagement(selectedOption)}\r\n            styles={{\r\n              menuList: (provided) => ({\r\n                ...provided,\r\n                maxHeight: \"200px\", // 最大5つまで表示\r\n                overflowY: \"auto\",\r\n              }),\r\n              menu: (provided) => ({\r\n                ...provided,\r\n                zIndex: 9999, // 前面に表示\r\n              })\r\n            }}\r\n            placeholder=\"エンゲージメントを選択\"\r\n          />\r\n\r\n        </div >\r\n\r\n\r\n        {/* Activity の選択 (react-select) */}\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n        <label>Activity</label><br />\r\n        <Select\r\n          options={filteredActivities.map(act => ({\r\n            value: act.activity_id, // activity_id を value に設定\r\n            label: act.activity     // 表示されるラベル\r\n          }))}\r\n          value={filteredActivities.find(act => act.activity === activity) \r\n            ? { value: activity, label: activity } \r\n            : null}\r\n          onChange={(selectedOption) => setActivity(selectedOption?.label || \"\")}\r\n          styles={{\r\n            menuList: (provided) => ({\r\n              ...provided,\r\n              maxHeight: \"200px\", // 5つまで表示\r\n              overflowY: \"auto\",\r\n            }),\r\n            menu: (provided) => ({\r\n              ...provided,\r\n              zIndex: 9999, // 他の要素より前面に表示\r\n            })\r\n          }}\r\n          placeholder=\"Activityを選択\"\r\n        />\r\n        </div>    \r\n\r\n        <label>作業場所</label>\r\n        <Select\r\n            options={locations}\r\n            value={location} // ✅ location の型を `{ value: string; label: string } | null` に統一\r\n            onChange={(selectedOption) => setLocation(selectedOption)} // ✅ そのままセット\r\n            placeholder=\"作業場所を選択\"\r\n            styles={{\r\n              menuList: (provided) => ({\r\n                ...provided,\r\n                maxHeight: \"200px\", // 最大5つまで表示\r\n                overflowY: \"auto\",\r\n              }),\r\n              menu: (provided) => ({\r\n                ...provided,\r\n                zIndex: 9999, // 前面に表示\r\n              }),\r\n            }}\r\n        />\r\n\r\n\r\n        <label style={{ display: \"block\", marginTop:\"14px\",marginBottom: \"-15px\" }}>\r\n          作業内容\r\n        </label>\r\n        \r\n        <input\r\n           type=\"text\"\r\n           value={details}\r\n           onChange={(e) => setDetails(e.target.value)}\r\n           style={{\r\n             paddingTop: \"5px\", // 🔹 文字を少し下にずらす\r\n             paddingBottom: \"5px\",\r\n             height: \"30px\", // ✅ 適度な高さを設定\r\n          }}\r\n        /> \r\n\r\n\r\n\r\n\r\n<button\r\n  onClick={handleAction}\r\n  disabled={isSubmitting}\r\n  style={{\r\n    opacity: isSubmitting ? 0.6 : 1,\r\n    pointerEvents: isSubmitting ? \"none\" : \"auto\",\r\n  }}\r\n>\r\n  {isSubmitting ? \"送信中...\" : selectedEvent ? \"更新\" : \"追加\"}\r\n</button>\r\n\r\n\r\n{/* ✅ 複製ボタンの追加（selectedEventがあるときのみ表示） */}\r\n{selectedEvent && (\r\n  <button\r\n    onClick={async () => {\r\n      if (isDuplicating) return;\r\n      setIsDuplicating(true);\r\n\r\n      console.log(\"📋 複製ボタンが押されました！\");\r\n      const duplicatedStart = selectedRange?.start?.toISOString() || \"\";\r\n      const duplicatedEnd = selectedRange?.end?.toISOString() || \"\";\r\n\r\n      try {\r\n        await onSubmit({\r\n          id: \"\", // 新しいID\r\n          userId: localStorage.getItem(\"userId\") || \"\",\r\n          engagement: engagement?.value ?? \"\",\r\n          activity,\r\n          location: location?.value || \"\",\r\n          details,\r\n          start: duplicatedStart,\r\n          end: duplicatedEnd,\r\n        });\r\n      } catch (error) {\r\n        console.error(\"❌ 複製エラー:\", error);\r\n      } finally {\r\n        setIsDuplicating(false);\r\n      }\r\n    }}\r\n    disabled={isDuplicating}\r\n    style={{\r\n      marginLeft: \"10px\",\r\n      backgroundColor: \"darkorange\",\r\n      color: \"white\",\r\n      opacity: isDuplicating ? 0.6 : 1,\r\n      pointerEvents: isDuplicating ? \"none\" : \"auto\",\r\n    }}\r\n  >\r\n    {isDuplicating ? \"複製中...\" : \"複製\"}\r\n  </button>\r\n)}\r\n\r\n\r\n{/* ✅ 予定があるときのみ「削除」ボタンを表示 */}\r\n{selectedEvent && (\r\n  <button\r\n    onClick={async () => {\r\n      if (isDeleting) return;\r\n      setIsDeleting(true);\r\n\r\n      console.log(\"🗑️ 削除ボタンが押されました！\");\r\n      try {\r\n        await onDelete(selectedEvent.id);\r\n      } catch (error) {\r\n        console.error(\"❌ 削除エラー:\", error);\r\n      } finally {\r\n        setIsDeleting(false);\r\n      }\r\n    }}\r\n    disabled={isDeleting}\r\n    style={{\r\n      backgroundColor: \"red\",\r\n      color: \"white\",\r\n      marginLeft: \"10px\",\r\n      opacity: isDeleting ? 0.6 : 1,\r\n      pointerEvents: isDeleting ? \"none\" : \"auto\",\r\n    }}\r\n  >\r\n    {isDeleting ? \"削除中...\" : \"削除\"}\r\n  </button>\r\n)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <button onClick={onClose}>キャンセル</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/components/ExportModal.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\ninterface ExportModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onExport: (startDate: string, endDate: string, format: string) => Promise<boolean>; // 修正箇所: `Promise<boolean>` を返す\r\n}\r\n\r\nconst ExportModal: React.FC<ExportModalProps> = ({ isOpen, onClose, onExport }) => {\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [format, setFormat] = useState(\"xlsx\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // 修正箇所: エラーメッセージ用の state\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleExport = async () => {\r\n    setErrorMessage(\"\"); // 修正箇所: エラーメッセージをリセット\r\n\r\n    const success = await onExport(startDate, endDate, format); // 修正箇所: `onExport` の結果を取得\r\n    if (success) {\r\n      onClose(); // 修正箇所: エクスポート成功時にモーダルを閉じる\r\n    } else {\r\n      setErrorMessage(\"対象期間に該当データはありません\"); // 修正箇所: エラー時にメッセージを表示\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* ✅ オーバーレイを適用 */}\r\n      <div className=\"export-modal-overlay\" onClick={onClose}></div>\r\n\r\n      {/* ✅ モーダル本体 */}\r\n      <div className=\"export-modal\" onClick={(e) => e.stopPropagation()}>\r\n        <h2>📥 データをエクスポート</h2>\r\n\r\n        <label>開始日</label>\r\n        <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n\r\n        <label>終了日</label>\r\n        <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n\r\n        <label>ファイル形式</label>\r\n        <Select\r\n          options={[\r\n            { value: \"xlsx\", label: \"Excel (.xlsx)\" },\r\n            { value: \"csv\", label: \"CSV (.csv)\" }\r\n          ]}\r\n          value={{ value: format, label: format === \"xlsx\" ? \"Excel (.xlsx)\" : \"CSV (.csv)\" }}\r\n          onChange={(selectedOption) => setFormat(selectedOption?.value || \"xlsx\")} // 修正箇所: 選択されたフォーマットを反映\r\n        />\r\n\r\n        {/* 修正箇所: エラーメッセージを赤字で表示 */}\r\n        {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n\r\n        <div className=\"export-modal-buttons\">\r\n          <button className=\"export-button\" onClick={handleExport}>📤 エクスポート</button>\r\n          <button className=\"export-button cancel\" onClick={onClose}>キャンセル</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportModal;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;AAQA,MAAM,cAA0C,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE;;IAC5E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,yBAAyB;IAE/E,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,eAAe;QACnB,gBAAgB,KAAK,sBAAsB;QAE3C,MAAM,UAAU,MAAM,SAAS,WAAW,SAAS,SAAS,0BAA0B;QACtF,IAAI,SAAS;YACX,WAAW,2BAA2B;QACxC,OAAO;YACL,gBAAgB,qBAAqB,sBAAsB;QAC7D;IACF;IAEA,qBACE;;0BAEE,6LAAC;gBAAI,WAAU;gBAAuB,SAAS;;;;;;0BAG/C,6LAAC;gBAAI,WAAU;gBAAe,SAAS,CAAC,IAAM,EAAE,eAAe;;kCAC7D,6LAAC;kCAAG;;;;;;kCAEJ,6LAAC;kCAAM;;;;;;kCACP,6LAAC;wBAAM,MAAK;wBAAO,OAAO;wBAAW,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;kCAEjF,6LAAC;kCAAM;;;;;;kCACP,6LAAC;wBAAM,MAAK;wBAAO,OAAO;wBAAS,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;kCAE7E,6LAAC;kCAAM;;;;;;kCACP,6LAAC,oLAAA,CAAA,UAAM;wBACL,SAAS;4BACP;gCAAE,OAAO;gCAAQ,OAAO;4BAAgB;4BACxC;gCAAE,OAAO;gCAAO,OAAO;4BAAa;yBACrC;wBACD,OAAO;4BAAE,OAAO;4BAAQ,OAAO,WAAW,SAAS,kBAAkB;wBAAa;wBAClF,UAAU,CAAC,iBAAmB,UAAU,gBAAgB,SAAS;;;;;;oBAIlE,8BAAgB,6LAAC;wBAAE,OAAO;4BAAE,OAAO;wBAAM;kCAAI;;;;;;kCAE9C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAO,WAAU;gCAAgB,SAAS;0CAAc;;;;;;0CACzD,6LAAC;gCAAO,WAAU;gCAAuB,SAAS;0CAAS;;;;;;;;;;;;;;;;;;;;AAKrE;GAtDM;KAAA;uCAwDS","debugId":null}},
    {"offset": {"line": 640, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 646, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/components/Sidebar.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { FaCog } from \"react-icons/fa\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport ExportModal from \"./ExportModal\";\r\n\r\nexport type SidebarView = \"calendar\" | \"report\" | \"user-report\" | \"dashboard\";\r\n\r\ntype SidebarProps = {\r\n  onSelectView: (view: SidebarView) => void;\r\n};\r\n\r\nexport default function Sidebar({ onSelectView }: SidebarProps) {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [isReportOpen, setIsReportOpen] = useState(false);\r\n  const [isExportOpen, setIsExportOpen] = useState(false);\r\n  const [isExportMyDataOpen, setIsExportMyDataOpen] = useState(false);\r\n  const [permissions, setPermissions] = useState({\r\n    canExportAll: false,\r\n    canViewReport: false,\r\n    canViewUserReport: false,\r\n    canViewDashboard: false,\r\n  });\r\n  const router = useRouter();\r\n\r\n  const reportRef = useRef<HTMLLIElement | null>(null);\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPermissions = async () => {\r\n      const userId = localStorage.getItem(\"userId\");\r\n      if (!userId) return;\r\n\r\n      try {\r\n        const res = await fetch(`/api/getUserPermissions?userId=${userId}`);\r\n        const data = await res.json();\r\n        console.log(\"✅ 権限データ:\", data);\r\n        setPermissions(data);\r\n      } catch (error) {\r\n        console.error(\"❌ 権限取得エラー:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPermissions();\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"isAuthenticated\");\r\n    router.push(\"/login\");\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    router.push(\"/change-password\");\r\n  };\r\n\r\n  const handleExport = async (startDate: string, endDate: string, format: string, userId?: string): Promise<boolean> => {\r\n    try {\r\n      const response = await fetch(\"/api/exportData\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ startDate, endDate, format, userId })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        if (errorData.error === \"対象期間に該当データはありません\") return false;\r\n        throw new Error(\"エクスポート処理に失敗しました\");\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const downloadUrl = window.URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = downloadUrl;\r\n      link.setAttribute(\"download\", `export.${format}`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"❌ エクスポートエラー:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event: MouseEvent) {\r\n      if (reportRef.current && !reportRef.current.contains(event.target as Node)) {\r\n        setIsReportOpen(false);\r\n      }\r\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n        setIsMenuOpen(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h1 className=\"sidebar-title\">成田公認会計士事務所</h1>\r\n      <h1 className=\"sidebar-title\">執務管理システム</h1>\r\n      <ul>\r\n      <li className=\"report-item\" onClick={() => onSelectView(\"calendar\")}>\r\n       <span>🗓️ タイムシート</span>\r\n       <span className=\"report-arrow\"></span>\r\n     </li>\r\n        <li onClick={() => setIsReportOpen(!isReportOpen)} ref={reportRef}>\r\n          <span>📑レポート</span>\r\n          <span className=\"report-arrow\">▶</span>\r\n\r\n          {isReportOpen && (\r\n            <div className=\"menu-popup_report\">\r\n              <button\r\n                className=\"export-button\"\r\n                onClick={() => setIsExportMyDataOpen(true)}\r\n              >\r\n                📤 Export（My Data）\r\n              </button>\r\n\r\n              {isExportMyDataOpen && (\r\n                <ExportModal\r\n                  isOpen={isExportMyDataOpen}\r\n                  onClose={() => setIsExportMyDataOpen(false)}\r\n                  onExport={async (startDate, endDate, format) => {\r\n                    const userId = localStorage.getItem(\"userId\") || \"\";\r\n                    return await handleExport(startDate, endDate, format, userId);\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              {(permissions.canExportAll || permissions.canViewReport || permissions.canViewUserReport || permissions.canViewDashboard) && (\r\n                <div>\r\n                  {permissions.canExportAll && (\r\n                    <button\r\n                      className=\"export-button\"\r\n                      onClick={() => setIsExportOpen(true)}\r\n                    >\r\n                      📤 Export（all Data）\r\n                    </button>\r\n                  )}\r\n\r\n                  {permissions.canViewReport && (\r\n                    <button\r\n                      className=\"export-button\"\r\n                      onClick={() => onSelectView(\"report\")}\r\n                    >\r\n                      📊 予実レポート\r\n                    </button>\r\n                  )}\r\n\r\n                  {permissions.canViewUserReport && (\r\n                    <button\r\n                      className=\"export-button\"\r\n                      onClick={() => onSelectView(\"user-report\")}\r\n                    >\r\n                      👤 ユーザー別レポート\r\n                    </button>\r\n                  )}\r\n\r\n                  {permissions.canViewDashboard && (\r\n                    <button\r\n                      className=\"export-button\"\r\n                      onClick={() => onSelectView(\"dashboard\")}\r\n                    >\r\n                      📈 ユーザー月次ダッシュボード\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </li>\r\n      </ul>\r\n\r\n      {isExportMyDataOpen && (\r\n        <ExportModal\r\n          isOpen={isExportMyDataOpen}\r\n          onClose={() => setIsExportMyDataOpen(false)}\r\n          onExport={async (startDate, endDate, format) => {\r\n            const userId = localStorage.getItem(\"userId\") || \"\";\r\n            return await handleExport(startDate, endDate, format, userId);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {isExportOpen && (\r\n        <ExportModal\r\n          isOpen={isExportOpen}\r\n          onClose={() => setIsExportOpen(false)}\r\n          onExport={(startDate, endDate, format) => handleExport(startDate, endDate, format)}\r\n        />\r\n      )}\r\n\r\n      <div\r\n        className=\"settings\"\r\n        onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n        ref={menuRef}\r\n      >\r\n        <FaCog size={20} />\r\n        <span>管理メニュー</span>\r\n        {isMenuOpen && (\r\n          <div className=\"menu-popup\">\r\n            <button className=\"pw-change-button\" onClick={handleChangePassword}>\r\n              🔑 PW変更\r\n            </button>\r\n            <button className=\"logout-button\" onClick={handleLogout}>\r\n              ログアウト\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 993, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 999, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/app/budget-report/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\ntype ReportRow = {\r\n  engagement: string;\r\n  activity: string;\r\n  budget: number;\r\n  actual: number;\r\n  activityId: string;\r\n};\r\n\r\nexport default function BudgetReportPage() {\r\n  const [reportData, setReportData] = useState<ReportRow[]>([]);\r\n  const [selectedEngagement, setSelectedEngagement] = useState<string>(\"\");\r\n  const [engagements, setEngagements] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchReportData = async () => {\r\n      const res = await fetch(\"/api/fetchBudgetAndActuals\");\r\n      const data = await res.json();\r\n      setReportData(data);\r\n    };\r\n\r\n    const fetchEngagements = async () => {\r\n      const userId = localStorage.getItem(\"userId\");\r\n      if (!userId) return;\r\n      try {\r\n        const res = await fetch(`/api/fetchEngagements?userId=${userId}`);\r\n        const json = await res.json();\r\n        interface Engagement {\r\n          name: string;\r\n          color: string;\r\n        }\r\n        const names = (json as Engagement[]).map((e) => e.name);\r\n        setEngagements(names);\r\n        // if (names.length > 0) {\r\n        //   setSelectedEngagement(names[0]);\r\n        // }\r\n      } catch (error) {\r\n        console.error(\"❌ fetchEngagements エラー:\", error);\r\n      }\r\n    };\r\n\r\n    fetchReportData();\r\n    fetchEngagements();\r\n  }, []);\r\n\r\n  // ✅ Activityごとに一意にまとめる（予算時間は重複集計しない）\r\n  const activityMap: { [key: string]: ReportRow } = {};\r\n  reportData.forEach((row) => {\r\n    if (row.engagement !== selectedEngagement) return;\r\n    const key = row.activityId + \"_\" + row.activity;\r\n    if (!activityMap[key]) {\r\n      activityMap[key] = { ...row };\r\n    } else {\r\n      activityMap[key].actual += row.actual; // 実績は加算\r\n    }\r\n  });\r\n\r\n  const filteredData = Object.values(activityMap).sort((a, b) => {\r\n    return a.activityId.localeCompare(b.activityId, \"ja\", { numeric: true });\r\n  });\r\n\r\n  const totalBudget = filteredData.reduce((sum, row) => sum + row.budget, 0);\r\n  const totalActual = filteredData.reduce((sum, row) => sum + row.actual, 0);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">📊 予実レポート</h1>\r\n\r\n      <div className=\"mb-6\">\r\n        <label\r\n          className=\"mr-3 font-semibold text-gray-700\"\r\n          style={{ fontSize: \"20px\" }}\r\n        >\r\n          Engagement（会社）を選択：\r\n        </label>\r\n        <select\r\n          value={selectedEngagement}\r\n          onChange={(e) => setSelectedEngagement(e.target.value)}\r\n          className=\"border px-3 py-2 rounded-md shadow-sm\"\r\n        >\r\n          <option value=\"\">-- 選択してください --</option>\r\n          {engagements.map((eng) => (\r\n            <option key={eng} value={eng}>\r\n              {eng}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {selectedEngagement && (\r\n        <>\r\n          <h2 className=\"text-xl font-semibold mb-3\" style={{ marginTop: \"35px\" }}>\r\n            「{selectedEngagement}」の予算・実績一覧\r\n          </h2>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full text-sm border-collapse border\">\r\n              <thead\r\n                style={{\r\n                  borderTop: \"2px solid black\",\r\n                  borderBottom: \"2px solid black\",\r\n                  fontWeight: \"bold\",\r\n                  backgroundColor: \"#aed4f6\",\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th className=\"border px-4 py-2\" style={{ width: \"100px\" }}>Activity ID</th>\r\n                  <th className=\"border px-4 py-2\" style={{ width: \"250px\" }}>Activity</th>\r\n                  <th className=\"border px-4 py-2\" style={{ textAlign: \"right\" }}>予定時間</th>\r\n                  <th className=\"border px-4 py-2\" style={{ textAlign: \"right\" }}>実績時間</th>\r\n                  <th className=\"border px-4 py-2\" style={{ textAlign: \"right\" }}>差分</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredData.map((row, idx) => {\r\n                  const diff = row.actual - row.budget;\r\n                  return (\r\n                    <tr key={idx}>\r\n                      <td className=\"border px-4 py-2 text-center\">{row.activityId}</td>\r\n                      <td className=\"border px-4 py-2 text-center\">{row.activity}</td>\r\n                      <td className=\"border px-4 py-2\" style={{ width: \"120px\", textAlign: \"right\" }}>{row.budget.toFixed(2)} h</td>\r\n                      <td className=\"border px-4 py-2\" style={{ width: \"120px\", textAlign: \"right\" }}>{row.actual.toFixed(2)} h</td>\r\n                      <td\r\n                        className=\"border px-4 py-2 font-bold\"\r\n                        style={{\r\n                          width: \"120px\",\r\n                          textAlign: \"right\",\r\n                          color: diff > 0 ? \"red\" : diff < 0 ? \"green\" : \"black\",\r\n                        }}\r\n                      >\r\n                        {(diff >= 0 ? \"+\" : \"\") + diff.toFixed(2)} h\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n\r\n                {/* ✅ 合計行 */}\r\n                <tr className=\"bg-gray-100 font-semibold\" \r\n                style={{\r\n                  borderTop: \"2px solid black\",\r\n                  borderBottom: \"2px solid black\",\r\n                  fontWeight: \"bold\",\r\n                  backgroundColor: \"#aed4f6\",\r\n                }}>\r\n                  <td className=\"border px-4 py-2\"></td>\r\n                  <td className=\"border px-4 py-2 text-center\">合計</td>\r\n                  <td className=\"border px-4 py-2\" style={{ textAlign: \"right\" }}>{totalBudget.toFixed(2)} h</td>\r\n                  <td className=\"border px-4 py-2\" style={{ textAlign: \"right\" }}>{totalActual.toFixed(2)} h</td>\r\n                  <td\r\n                    className=\"border px-4 py-2\"\r\n                    style={{\r\n                      textAlign: \"right\",\r\n                      color:\r\n                        totalActual - totalBudget > 0\r\n                          ? \"red\"\r\n                          : totalActual - totalBudget < 0\r\n                          ? \"green\"\r\n                          : \"black\",\r\n                    }}\r\n                  >\r\n                    {(totalActual - totalBudget >= 0 ? \"+\" : \"\") + (totalActual - totalBudget).toFixed(2)} h\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1407, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/app/user-report/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface ReportRow {\r\n  userId: string;\r\n  userName: string;\r\n  engagement: string;\r\n  activity: string;\r\n  activityId?: string;\r\n  budget: number;\r\n  actual: number;\r\n  month?: string;\r\n}\r\n\r\nexport default function UserReportPage() {\r\n  const [data, setData] = useState<ReportRow[]>([]);\r\n  const [engagements, setEngagements] = useState<string[]>([]);\r\n  const [selectedEngagement, setSelectedEngagement] = useState<string>(\"\");\r\n  const [selectedUser, setSelectedUser] = useState<string>(\"\");\r\n  const [viewMode, setViewMode] = useState<\"activity\" | \"month\">(\"activity\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await fetch(\"/api/fetchUserBudgetActuals\");\r\n      if (res.ok) {\r\n        const json = await res.json();\r\n        setData(json);\r\n      }\r\n    };\r\n\r\n    const fetchUserEngagements = async () => {\r\n      const userId = localStorage.getItem(\"userId\");\r\n      if (!userId) return;\r\n\r\n      try {\r\n        const res = await fetch(`/api/fetchEngagements?userId=${userId}`);\r\n        const data = await res.json();\r\n        const engagementNames = Array.isArray(data) \r\n         ? (data as { name: string; color: string }[]).map((e) => e.name) \r\n         : [];\r\n        setEngagements(engagementNames);\r\n      } catch (error) {\r\n        console.error(\"❌ Engagement取得エラー:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    fetchUserEngagements();\r\n  }, []);\r\n\r\n  const filteredUsers = Array.from(\r\n    new Set(\r\n      data\r\n        .filter(row => !selectedEngagement || row.engagement === selectedEngagement)\r\n        .map(d => d.userName)\r\n    )\r\n  );\r\n\r\n  const filteredData = selectedEngagement\r\n    ? data.filter(row => {\r\n        const matchEngagement = row.engagement === selectedEngagement;\r\n        const matchUser = selectedUser ? row.userName === selectedUser : true;\r\n        return matchEngagement && matchUser;\r\n      })\r\n    : [];\r\n\r\n  const groupedData = viewMode === \"month\"\r\n    ? Object.values(\r\n        filteredData.reduce((acc, row) => {\r\n          const key = `${row.userName}_${row.engagement}_${row.month}`;\r\n          if (!acc[key]) {\r\n            acc[key] = { ...row, activity: row.month || \"\", budget: 0, actual: 0 };\r\n          }\r\n          acc[key].budget += row.budget;\r\n          acc[key].actual += row.actual;\r\n          return acc;\r\n        }, {} as { [key: string]: ReportRow })\r\n      )\r\n    : Object.values(\r\n        filteredData.reduce((acc, row) => {\r\n          const key = `${row.userName}_${row.engagement}_${row.activityId}_${row.activity}`;\r\n          if (!acc[key]) {\r\n            acc[key] = { ...row, budget: 0, actual: 0 };\r\n          }\r\n          acc[key].budget += row.budget;\r\n          acc[key].actual += row.actual;\r\n          return acc;\r\n        }, {} as { [key: string]: ReportRow })\r\n      ).sort((a, b) => (a.activityId || \"\").localeCompare(b.activityId || \"\", \"ja\", { numeric: true }));\r\n\r\n  const totalActual = groupedData.reduce((sum, row) => sum + row.actual, 0);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-8\">👤 ユーザー別実績レポート</h1>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10 max-w-4xl\">\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"mb-2 font-semibold\" style={{ fontSize: \"20px\" }}>表示モード：</label>\r\n          <select\r\n            value={viewMode}\r\n            onChange={(e) => setViewMode(e.target.value as \"activity\" | \"month\")}\r\n            className=\"border px-3 py-2 rounded-md shadow-sm\"\r\n          >\r\n            <option value=\"activity\">アクティビティ別</option>\r\n            <option value=\"month\">月別</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"mb-2 font-semibold\" style={{ fontSize: \"20px\" }}>Engagement（会社）を選択：</label>\r\n          <select\r\n            value={selectedEngagement}\r\n            onChange={(e) => {\r\n              setSelectedEngagement(e.target.value);\r\n              setSelectedUser(\"\");\r\n            }}\r\n            className=\"border px-3 py-2 rounded-md shadow-sm\"\r\n          >\r\n            <option value=\"\">-- 選択してください --</option>\r\n            {engagements.map((e) => (\r\n              <option key={e} value={e}>{e}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col\">\r\n          <label className=\"mb-2 font-semibold\" style={{ fontSize: \"20px\" }}>Userを選択：</label>\r\n          <select\r\n            value={selectedUser}\r\n            onChange={(e) => setSelectedUser(e.target.value)}\r\n            className=\"border px-3 py-2 rounded-md shadow-sm\"\r\n          >\r\n            <option value=\"\">-- 選択してください --</option>\r\n            {filteredUsers.map((u) => (\r\n              <option key={u} value={u}>{u}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {selectedEngagement && (\r\n        <div className=\"overflow-x-auto\" style={{ marginTop: \"30px\" }}>\r\n          <table className=\"min-w-full text-sm border-collapse border table-auto\">\r\n            <thead style={{ borderTop: \"2px solid black\", borderBottom: \"2px solid black\", fontWeight: \"bold\", backgroundColor: \"#aed4f6\" }}>\r\n              <tr>\r\n                <th className=\"border px-6 py-3\">ユーザー</th>\r\n                <th className=\"border px-6 py-3\">Engagement</th>\r\n                {viewMode === \"activity\" && <th className=\"border px-6 py-3\">Activity ID</th>}\r\n                <th className=\"border px-6 py-3\">{viewMode === \"month\" ? \"月\" : \"Activity\"}</th>\r\n                <th className=\"border px-6 py-3\" style={{ width: \"120px\", textAlign: \"right\" }}>実績</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {groupedData.map((row, idx) => (\r\n                <tr key={idx} className=\"align-top\">\r\n                  <td className=\"border px-6 py-2\">{row.userName}</td>\r\n                  <td className=\"border px-6 py-2\">{row.engagement}</td>\r\n                  {viewMode === \"activity\" && <td className=\"border px-6 py-2\">{row.activityId}</td>}\r\n                  <td className=\"border px-6 py-2\">{viewMode === \"month\" ? row.month : row.activity}</td>\r\n                  <td className=\"border px-6 py-2\" style={{ width: \"120px\", textAlign: \"right\" }}>{row.actual.toFixed(1)}h</td>\r\n                </tr>\r\n              ))}\r\n\r\n              <tr className=\"font-bold bg-gray-50\" style={{ borderTop: \"2px solid black\", borderBottom: \"2px solid black\", fontWeight: \"bold\", backgroundColor: \"#aed4f6\" }}>\r\n                <td className=\"border px-6 py-2 text-center\" colSpan={viewMode === \"month\" ? 3 : 4}>合計</td>\r\n                <td className=\"border px-6 py-2\" style={{ textAlign: \"right\" }}>{totalActual.toFixed(1)}h</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1852, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1858, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/app/user-monthly-dashboard/page.tsx"],"sourcesContent":["// src/app/user-monthly-dashboard/page.tsx\r\n\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\ninterface MonthlyRow {\r\n  userName: string;\r\n  month: string;\r\n  totalHours: number;\r\n}\r\n\r\nexport default function UserMonthlyDashboard() {\r\n  const [data, setData] = useState<MonthlyRow[]>([]);\r\n  const [selectedUser, setSelectedUser] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await fetch(\"/api/userMonthlySummary\");\r\n      if (res.ok) {\r\n        const json = await res.json();\r\n        setData(json);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const users = Array.from(new Set(data.map((d) => d.userName)));\r\n\r\n  const filteredData = selectedUser\r\n    ? data.filter((d) => d.userName === selectedUser)\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-8\">\r\n      <h1 className=\"text-2xl font-bold\">📊 ユーザー別・月別ダッシュボード</h1>\r\n\r\n      <div className=\"mb-4\">\r\n        <label \r\n          className=\"mr-2 font-semibold\"\r\n          style={{ fontSize: \"20px\" }}\r\n        >ユーザー選択：</label>\r\n        <select\r\n          className=\"border p-2 rounded\"\r\n          value={selectedUser}\r\n          onChange={(e) => setSelectedUser(e.target.value)}\r\n        >\r\n          <option value=\"\">-- 選択してください --</option>\r\n          {users.map((user) => (\r\n            <option key={user} value={user}>{user}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {selectedUser && (\r\n        <>\r\n          {/* 📊 グラフ表示 */}\r\n          <div style={{ width: \"100%\", height: 350 , marginTop: \"30px\" }}>\r\n            <ResponsiveContainer>\r\n              <BarChart\r\n                data={filteredData}\r\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"month\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"totalHours\" fill=\"#8884d8\" name=\"実績時間 (h)\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          {/* 📋 テーブル表示 */}\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full border text-sm\">\r\n              <thead className=\"bg-gray-100\">\r\n                <tr>\r\n                  <th className=\"border px-4 py-2\"style={{ width: \"120px\", textAlign: \"right\" }}>ユーザー</th>\r\n                  <th className=\"border px-4 py-2\"style={{ width: \"120px\", textAlign: \"right\" }}>月</th>\r\n                  <th className=\"border px-4 py-2\"style={{ width: \"120px\", textAlign: \"right\" }}>実績時間</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredData.map((row, idx) => (\r\n                  <tr key={idx} className=\"text-center\">\r\n                    <td className=\"border px-4 py-2\"style={{ width: \"120px\", textAlign: \"right\" }}>{row.userName}</td>\r\n                    <td className=\"border px-4 py-2\"style={{ width: \"120px\", textAlign: \"right\" }}>{row.month}</td>\r\n                    <td className=\"border px-4 py-2\"style={{ width: \"120px\", textAlign: \"right\" }}>{row.totalHours.toFixed(1)} h</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2170, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app_cpaoffice/calendar_app_cpaoffice/src/app/calendar/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { DateSelectArg, EventClickArg ,EventDropArg } from \"@fullcalendar/core\";\r\nimport { EventData } from \"@/types/EventData\";\r\nimport { Modal } from \"@/components/Modal\";\r\nimport Sidebar from \"@/components/Sidebar\";\r\nimport {  EventResizeDoneArg } from \"@fullcalendar/interaction\"; \r\nimport \"@/styles/calendar.css\"; \r\nimport BudgetReportPage from \"../budget-report/page\"; // 🔹レポート画面\r\nimport UserReportPage from \"../user-report/page\";\r\nimport UserMonthlyDashboard from \"../user-monthly-dashboard/page\";\r\n\r\nexport default function CalendarPage() {\r\n  // const [isAuthenticated, setIsAuthenticated] = useState(\r\n  //   typeof window !== \"undefined\" && localStorage.getItem(\"isAuthenticated\") === \"true\"\r\n  // );\r\n  // const handleLogout = () => {\r\n\r\n  const router = useRouter();\r\n  const [currentView, setCurrentView] = useState<\"calendar\" | \"report\" | \"user-report\" | \"dashboard\">(\"calendar\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedRange, setSelectedRange] = useState<{ start: Date; end: Date } | null>(null);\r\n  const [selectedEvent, setSelectedEvent] = useState<EventData | null>(null);\r\n  const [events, setEvents] = useState([]);\r\n  const [engagements, setEngagements] = useState<{ name: string; color: string }[]>([]);\r\n\r\n  // ✅ Google Sheets から予定データを取得\r\n  const fetchEventsFromSheets = async () => {\r\n    try {\r\n      const userId = localStorage.getItem(\"userId\") || \"\";\r\n      if (!userId) {\r\n        console.error(\"❌ ユーザーIDが取得できませんでした\");\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`/api/getEvents?userId=${encodeURIComponent(userId)}`);\r\n      if (!response.ok) throw new Error(\"スプレッドシートのデータ取得に失敗\");\r\n\r\n      const data = await response.json();\r\n      console.log(\"✅ /api/getEvents のレスポンス:\", data);\r\n\r\n      \r\n      setEvents(\r\n        data\r\n          .filter((event: EventData) => event.userId === userId) // ✅ ログインユーザーのデータのみ取得\r\n          .map((event: EventData) => {\r\n            const engagement = engagements.find((e) => e.name === event.engagement) || { color: \"#3788d8\" };\r\n            return{\r\n              id: event.id, // DataId\r\n              title: `${event.engagement} - ${event.activity}`,\r\n              start: new Date(event.start),\r\n              end: new Date(event.end),\r\n              backgroundColor: engagement?.color || \"#3788d8\", // ✅ スプレッドシートの色を適用\r\n              borderColor: engagement?.color || \"#3788d8\",\r\n              extendedProps: {\r\n                details: `${event.location} / ${event.details}`,\r\n              },\r\n            };\r\n          })\r\n      );\r\n    } catch (error) {\r\n      console.error(\"❌ スプレッドシートからのデータ取得エラー:\", error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  // ✅ 予定をスプレッドシートに保存\r\n  const handleAddEvent = async (data: EventData): Promise<void> => {\r\n    if (!selectedRange) {\r\n      console.error(\"❌ 選択された範囲がありません！\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const userId = localStorage.getItem(\"userId\") || \"\";\r\n      const userName = localStorage.getItem(\"userName\") || \"Unknown\";\r\n      const response = await fetch(\"/api/saveEvent\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          id: selectedEvent?.id || \"\",\r\n          userId,\r\n          userName,\r\n          start: selectedRange.start.toISOString(),\r\n          end: selectedRange.end.toISOString(),\r\n          engagement: data.engagement,\r\n          activity: data.activity,\r\n          location: data.location,\r\n          details: data.details,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"スプレッドシートへの保存に失敗\");\r\n\r\n      console.log(\"✅ スプレッドシートに保存完了\");\r\n      fetchEventsFromSheets();\r\n      setIsOpen(false);\r\n    } catch (error) {\r\n      console.error(\"❌ スプレッドシートへの保存エラー:\", error);\r\n    }\r\n  };\r\n\r\n  // ✅ 予定をスプレッドシートで更新\r\n  const handleUpdateEvent = async (data: EventData, range: { start: Date; end: Date } | null): Promise<void> => {\r\n    if (!range || !selectedEvent) {\r\n      console.error(\"❌ 更新する範囲またはイベントが未定義です！\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/updateEvent\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          id: selectedEvent.id, // DataId を使用\r\n          start: range.start.toISOString(),\r\n          end: range.end.toISOString(),\r\n          engagement: data.engagement,\r\n          activity: data.activity,\r\n          location: data.location,\r\n          details: data.details,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"スプレッドシートの更新に失敗\");\r\n\r\n      console.log(\"✅ スプレッドシートを更新完了\");\r\n      fetchEventsFromSheets();\r\n      setIsOpen(false);\r\n    } catch (error) {\r\n      console.error(\"❌ スプレッドシートの更新エラー:\", error);\r\n    }\r\n  };\r\n\r\n  // ✅ 予定がクリックされたときにホップアップを表示\r\n  const handleEventClick = (clickInfo: EventClickArg) => {\r\n    console.log(\"📅 クリックされたイベント:\", clickInfo.event);\r\n  \r\n    setSelectedEvent({\r\n      id: clickInfo.event.id || \"\",\r\n      userId: clickInfo.event.extendedProps?.userId || \"\",\r\n      userName: clickInfo.event.extendedProps?.userName || \"Unknown\",\r\n      engagement: clickInfo.event.title.split(\" - \")[0] || \"\",\r\n      activity: clickInfo.event.title.split(\" - \")[1] || \"\",\r\n      location: clickInfo.event.extendedProps?.details?.split(\" / \")[0] || \"\",\r\n      details: clickInfo.event.extendedProps?.details?.split(\" / \")[1] || \"\",\r\n      start: clickInfo.event.start?.toISOString() || \"\",\r\n      end: clickInfo.event.end?.toISOString() || clickInfo.event.start?.toISOString() || \"\",\r\n    });\r\n  \r\n    // ✅ `null` の場合は `new Date()` を代入して型エラーを回避\r\n    setSelectedRange({\r\n      start: clickInfo.event.start ?? new Date(),\r\n      end: clickInfo.event.end ?? clickInfo.event.start ?? new Date(),\r\n    });\r\n  \r\n    setIsOpen(true);\r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  const handleDeleteEvent = async (id: string): Promise<void> => {\r\n    console.log(\"🗑️ 削除する予定の ID:\", id);\r\n  \r\n    try {\r\n      const response = await fetch(\"/api/deleteEvent\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ id }), // ✅ ID を送信\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(\"スプレッドシートの削除に失敗しました\");\r\n      }\r\n  \r\n      console.log(\"✅ スプレッドシートのデータを削除しました！\");\r\n      fetchEventsFromSheets(); // ✅ 削除後に最新のデータを取得\r\n      setIsOpen(false);\r\n    } catch (error) {\r\n      console.error(\"❌ 削除エラー:\", error);\r\n    }\r\n  };\r\n  \r\n  const handleEventResize = async (resizeInfo: EventResizeDoneArg) => {\r\n    console.log(\"✏️ 予定の時間が変更されました:\", resizeInfo.event);\r\n  \r\n    const updatedEvent = {\r\n      id: resizeInfo.event.id,\r\n      start: resizeInfo.event.start ?? new Date(), \r\n      end: resizeInfo.event.end ?? resizeInfo.event.start ?? new Date(),\r\n      engagement: resizeInfo.event.title.split(\" - \")[0] || \"\",\r\n      activity: resizeInfo.event.title.split(\" - \")[1] || \"\",\r\n      location: resizeInfo.event.extendedProps.details.split(\" / \")[0] || \"\",\r\n      details: resizeInfo.event.extendedProps.details.split(\" / \")[1] || \"\",\r\n    };\r\n  \r\n    try {\r\n      const response = await fetch(\"/api/updateEvent\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(updatedEvent),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(\"スプレッドシートの更新に失敗しました\");\r\n      }\r\n  \r\n      console.log(\"✅ スプレッドシートのデータを更新しました\");\r\n      fetchEventsFromSheets(); // 🔹 最新のデータを取得\r\n    } catch (error) {\r\n      console.error(\"❌ スプレッドシートの更新エラー:\", error);\r\n    }\r\n  };\r\n  \r\n  const handleEventMove = async (eventDropInfo: EventDropArg) => {\r\n    console.log(\"📌 予定の移動:\", eventDropInfo);\r\n  \r\n    const { event } = eventDropInfo;\r\n    const updatedEvent = {\r\n      id: event.id, // ✅ DataId を取得\r\n      start: eventDropInfo.event.start ?? new Date(),\r\n      end: eventDropInfo.event.end ?? eventDropInfo.event.start ?? new Date(), // end がない場合は start と同じに\r\n    };\r\n  \r\n    console.log(\"✅ 更新するデータ:\", updatedEvent);\r\n  \r\n    try {\r\n      const response = await fetch(\"/api/updateEvent\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(updatedEvent),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(\"スプレッドシートの更新に失敗\");\r\n      }\r\n  \r\n      console.log(\"✅ スプレッドシート更新完了\");\r\n      fetchEventsFromSheets(); // 🔹 更新後、最新の予定を取得\r\n    } catch (error) {\r\n      console.error(\"❌ スプレッドシートの更新エラー:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSelect = (arg: DateSelectArg) => {\r\n    console.log(\"📅 選択された範囲:\", arg.start, arg.end);\r\n    setSelectedRange({ start: arg.start, end: arg.end });\r\n    setSelectedEvent(null);\r\n    setIsOpen(true);\r\n  };\r\n\r\n\r\n\r\n  // ✅ スプレッドシートから Engagement を取得\r\n  const fetchEngagements = async () => {\r\n    try {\r\n      const userId = typeof window !== \"undefined\" ? localStorage.getItem(\"userId\") : null;\r\n      if (!userId) {\r\n        console.error(\"❌ ユーザーIDが取得できません！\");\r\n        return;\r\n      }\r\n  \r\n      const response = await fetch(`/api/fetchEngagements?userId=${encodeURIComponent(userId)}`);\r\n      if (!response.ok) throw new Error(\"エンゲージメントの取得に失敗しました\");\r\n  \r\n      const data = await response.json();\r\n      if (!Array.isArray(data)) {\r\n        console.error(\"❌ APIのレスポンスが配列ではありません:\", data);\r\n        return;\r\n      }\r\n  \r\n      setEngagements(data);\r\n    } catch (error) {\r\n      console.error(\"❌ エンゲージメントの取得エラー:\", error);\r\n    }\r\n  };\r\n  \r\n    \r\n\r\n  // ✅ 初回レンダリング時に fetchEngagements を実行**\r\n  useEffect(() => {\r\n    fetchEngagements();\r\n  }, []); // 🔹 依存配列を `[]` にして初回のみ実行\r\n\r\n  // ✅ engagements が更新された後に fetchEventsFromSheets を実行**\r\n  useEffect(() => {\r\n    if (engagements.length > 0) {\r\n      fetchEventsFromSheets();\r\n    }\r\n  }, [engagements]); // 🔹 `engagements` が更新されたときに実行\r\n\r\n\r\n// ✅ エンゲージメントを取得したあとにイベントも取得\r\n  useEffect(() => {\r\n    if (engagements.length > 0) {\r\n    fetchEventsFromSheets();\r\n  }\r\n  }, [engagements]);\r\n\r\n\r\n  \r\n // ✅ 初回読み込み時にスプレッドシートのデータを取得\r\nuseEffect(() => {\r\n  if (!localStorage.getItem(\"isAuthenticated\")) {\r\n    router.push(\"/login\");\r\n  } else {\r\n    fetchEngagements();\r\n  }\r\n}, [router]); // 🔹 `router` に依存するよう修正\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <Sidebar onSelectView={setCurrentView}/>\r\n      <div style={{ marginLeft: \"220px\", padding: \"20px\", width: \"100%\" }}>\r\n      {currentView === \"calendar\" ? (\r\n          <>\r\n        <FullCalendar\r\n          plugins={[timeGridPlugin, interactionPlugin]}\r\n          initialView=\"timeGridWeek\"\r\n          slotMinTime=\"00:00:00\"\r\n          slotMaxTime=\"24:00:00\"\r\n          scrollTime=\"09:00:00\"   // デフォルト表示を 9:00 に\r\n          locale=\"ja\"\r\n          timeZone=\"Asia/Tokyo\"\r\n          slotDuration=\"00:15:00\"\r\n          slotLabelInterval=\"01:00:00\"\r\n          slotLabelFormat={{ hour: \"2-digit\", minute: \"2-digit\", hour12: false }}\r\n          selectable={true}\r\n          editable={true}\r\n          select={handleSelect}\r\n          events={events}\r\n          eventClick={handleEventClick}\r\n          eventDrop={handleEventMove}\r\n          eventResize={handleEventResize}\r\n          headerToolbar={{\r\n            left: \"prev,next today\",\r\n            center: \"title\",\r\n            right: \"timeGridWeek,timeGridDay\",\r\n          }}\r\n          height=\"900px\" // ✅ 高さを固定\r\n          // contentHeight=\"1000px\" // ✅ 自動調整\r\n          // views={{\r\n          //   timeGridWeek: {\r\n          //     slotDuration: \"00:15:00\", \r\n          //   },\r\n          //   timeGridDay: {\r\n          //     slotDuration: \"00:15:00\",\r\n          //   }\r\n          // }}\r\n        />\r\n\r\n        {isOpen && (\r\n          <Modal\r\n            isOpen={isOpen}\r\n            onClose={() => setIsOpen(false)}\r\n            onSubmit={handleAddEvent}\r\n            onUpdate={handleUpdateEvent}\r\n            onDelete={handleDeleteEvent}\r\n            selectedRange={selectedRange}\r\n            selectedEvent={selectedEvent}\r\n          />\r\n        )}\r\n      </>\r\n      ) : (\r\n          <>\r\n            \r\n          </>\r\n    )}\r\n     {currentView === \"report\" && <BudgetReportPage />}\r\n     {currentView === \"user-report\" && <UserReportPage />}\r\n     {currentView === \"dashboard\" && <UserMonthlyDashboard />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}